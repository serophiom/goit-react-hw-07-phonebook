{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stas\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\Filter\\\\Filter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Filter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  change\n}) => {\n  _s();\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  function getFilteredName(event) {\n    const {\n      value\n    } = event.currentTarget;\n    handleFilter(value);\n  }\n\n  const handleFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  return contacts.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Find contacts by Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"filter-input\",\n        type: \"text\",\n        name: \"filter\",\n        value: filter,\n        onChange: getFilteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There is no contacts in your Phonebook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Filter, \"1RfQgv040d7tk5SZf9pk5Spl3ow=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Filter;\nFilter.propTypes = {\n  change: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.array.isRequired\n};\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/Filter/Filter.js"],"names":["React","useSelector","PropTypes","Filter","change","contacts","state","items","filter","getFilteredName","event","value","currentTarget","handleFilter","dispatch","changeFilter","length","propTypes","func","isRequired","string","array"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,KAAzB,CAA5B;AACA,QAAMC,MAAM,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeG,MAAzB,CAA1B;;AAEA,WAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,aAAxB;AACAC,IAAAA,YAAY,CAACF,KAAD,CAAZ;AACH;;AAED,QAAME,YAAY,GAAGF,KAAK,IAAI;AAC1BG,IAAAA,QAAQ,CAACC,YAAY,CAACJ,KAAD,CAAb,CAAR;AACH,GAFD;;AAIA,SAAON,QAAQ,CAACW,MAAT,KAAoB,CAApB,gBACH;AAAA,2BACA;AAAA,uDACyB;AACrB,QAAA,SAAS,EAAC,cADW;AAErB,QAAA,IAAI,EAAC,MAFgB;AAGrB,QAAA,IAAI,EAAC,QAHgB;AAIrB,QAAA,KAAK,EAAER,MAJc;AAKrB,QAAA,QAAQ,EAAEC;AALW;AAAA;AAAA;AAAA;AAAA,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADG,gBAcH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ;AAgBH,CA7BD;;GAAMN,M;UACeF,W,EACFA,W;;;KAFbE,M;AA+BNA,MAAM,CAACc,SAAP,GAAmB;AACfb,EAAAA,MAAM,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADR;AAEfX,EAAAA,MAAM,EAAEN,SAAS,CAACkB,MAAV,CAAiBD,UAFV;AAGfd,EAAAA,QAAQ,EAAEH,SAAS,CAACmB,KAAV,CAAgBF;AAHX,CAAnB;AAMA,eAAehB,MAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ change }) => {\r\n    const contacts = useSelector(state => state.contacts.items);\r\n    const filter = useSelector(state => state.contacts.filter);\r\n\r\n    function getFilteredName (event) {\r\n        const { value } = event.currentTarget;\r\n        handleFilter(value);\r\n    }\r\n\r\n    const handleFilter = value => {\r\n        dispatch(changeFilter(value))\r\n    };\r\n\r\n    return contacts.length !== 0 ? (\r\n        <div>\r\n        <label>\r\n            Find contacts by Name<input\r\n            className=\"filter-input\"\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={getFilteredName}\r\n        />\r\n        </label>\r\n        \r\n        </div>\r\n        ) : (\r\n        <p>There is no contacts in your Phonebook</p>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n    change: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n    contacts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Filter;"]},"metadata":{},"sourceType":"module"}
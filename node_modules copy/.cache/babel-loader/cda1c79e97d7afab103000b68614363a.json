{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stas\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\Contacts\\\\Contacts.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../redux/contacts-actions';\nimport './Contacts.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = ({\n  contacts,\n  showContacts,\n  onDeleteContact\n}) => {\n  return contacts && /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: contacts.map(({\n      id,\n      name,\n      number\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"contacts__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contacts__text\",\n        children: [name, \": \", number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDeleteContact(id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Contacts;\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  showContacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.contacts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/Contacts/Contacts.js"],"names":["React","connect","contactsActions","PropTypes","Contacts","contacts","showContacts","onDeleteContact","map","id","name","number","propTypes","array","isRequired","func","mapStateToProps","state","mapDispatchToProps","dispatch","deleteContact"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA;AAA1B,CAAD,KAAiD;AAC9D,SAAOF,QAAQ,iBACX;AAAA,cACKA,QAAQ,CAACG,GAAT,CAAa,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAD,kBACV;AAAa,MAAA,SAAS,EAAC,gBAAvB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,mBAA+BD,IAA/B,QAAuCC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMJ,eAAe,CAACE,EAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAASA,EAAT;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD;;KAAML,Q;AAcNA,QAAQ,CAACQ,SAAT,GAAqB;AACjBP,EAAAA,QAAQ,EAAEF,SAAS,CAACU,KAAV,CAAgBC,UADT;AAEjBR,EAAAA,YAAY,EAAEH,SAAS,CAACU,KAAV,CAAgBC,UAFb;AAGjBP,EAAAA,eAAe,EAAEJ,SAAS,CAACY,IAAV,CAAeD;AAHf,CAArB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCZ,EAAAA,QAAQ,EAAEY,KAAK,CAACZ,QAAN,CAAeA;AADO,CAAZ,CAAxB;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,eAAe,EAAGE,EAAD,IAAQU,QAAQ,CAACjB,eAAe,CAACkB,aAAhB,CAA8BX,EAA9B,CAAD;AADG,CAAL,CAAnC;;AAIA,eAAeR,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../redux/contacts-actions';\r\nimport './Contacts.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ contacts, showContacts, onDeleteContact }) => {\r\n    return contacts && (\r\n        <ul>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} className=\"contacts__item\">\r\n                    <p className=\"contacts__text\">{name}: {number}</p>\r\n                    <button onClick={() => onDeleteContact(id)}>delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n    \r\n};\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    showContacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),        \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';import logger from'redux-logger';import storage from'redux-persist/lib/storage';import contactsReducer from'./contacts-reducer';var middleware=[].concat(_toConsumableArray(getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}})),[logger]);var contactsPersistConfig={key:'contacts',storage:storage,blacklist:['filter']};export var store=configureStore({reducer:{contacts:persistReducer(contactsPersistConfig,contactsReducer)},middleware:middleware,devTools:process.env.NODE_ENV==='development'});export var persistor=persistStore(store);","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","storage","contactsReducer","middleware","serializableCheck","ignoredActions","contactsPersistConfig","key","blacklist","store","reducer","contacts","devTools","process","env","NODE_ENV","persistor"],"mappings":"wLAAA,OAASA,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,OACEC,YADF,CAEEC,cAFF,CAGEC,KAHF,CAIEC,SAJF,CAKEC,KALF,CAMEC,OANF,CAOEC,KAPF,CAQEC,QARF,KASO,eATP,CAUA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CAEA,GAAMC,CAAAA,UAAU,8BACXZ,oBAAoB,CAAC,CACtBa,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACX,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADG,CAAD,CADT,GAMdC,MANc,EAAhB,CASA,GAAMM,CAAAA,qBAAqB,CAAG,CAC5BC,GAAG,CAAE,UADuB,CAE5BN,OAAO,CAAPA,OAF4B,CAG5BO,SAAS,CAAE,CAAC,QAAD,CAHiB,CAA9B,CAMA,MAAO,IAAMC,CAAAA,KAAK,CAAGnB,cAAc,CAAC,CAClCoB,OAAO,CAAE,CACPC,QAAQ,CAAElB,cAAc,CAACa,qBAAD,CAAwBJ,eAAxB,CADjB,CADyB,CAIlCC,UAAU,CAAVA,UAJkC,CAKlCS,QAAQ,CAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aALD,CAAD,CAA5B,CAQP,MAAO,IAAMC,CAAAA,SAAS,CAAGxB,YAAY,CAACiB,KAAD,CAA9B","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n}), logger];\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter']\n};\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer)\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n});\nexport const persistor = persistStore(store); // import { configureStore, getDefaultMiddleware , combineReducers } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\n// import { persistStore,\n//         persistReducer,\n//         FLUSH,\n//         REHYDRATE,\n//         PAUSE,\n//         PERSIST,\n//         PURGE,\n//         REGISTER,\n//         } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// import contactsReducer from './contacts-reducer';\n// const persistConfig = {\n//     key: 'contacts',\n//     storage,\n//   }\n//   const middleware = [\n//     ...getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n//     logger,\n//   ];\n// const rootReducer = combineReducers({\n//     contacts: contactsReducer,\n//     filter: contactsReducer,\n// });\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// const store = configureStore({\n//     reducer: persistedReducer,\n//     middleware,\n//     devTools: process.env.NODE_ENV === 'development',\n// });\n// const persistor = persistStore(store)\n// export default { store, persistor };","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","storage","contactsReducer","middleware","serializableCheck","ignoredActions","contactsPersistConfig","key","blacklist","store","reducer","contacts","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AAEA,MAAMC,UAAU,GAAG,CACjB,GAAGZ,oBAAoB,CAAC;AACtBa,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACX,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,EAMjBC,MANiB,CAAnB;AASA,MAAMM,qBAAqB,GAAG;AAC5BC,EAAAA,GAAG,EAAE,UADuB;AAE5BN,EAAAA,OAF4B;AAG5BO,EAAAA,SAAS,EAAE,CAAC,QAAD;AAHiB,CAA9B;AAMA,OAAO,MAAMC,KAAK,GAAGnB,cAAc,CAAC;AAClCoB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAElB,cAAc,CAACa,qBAAD,EAAwBJ,eAAxB;AADjB,GADyB;AAIlCC,EAAAA,UAJkC;AAKlCS,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AALD,CAAD,CAA5B;AAQP,OAAO,MAAMC,SAAS,GAAGxB,YAAY,CAACiB,KAAD,CAA9B,C,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n\r\n// import { configureStore, getDefaultMiddleware , combineReducers } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\n// import { persistStore,\r\n//         persistReducer,\r\n//         FLUSH,\r\n//         REHYDRATE,\r\n//         PAUSE,\r\n//         PERSIST,\r\n//         PURGE,\r\n//         REGISTER,\r\n//         } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n// import contactsReducer from './contacts-reducer';\r\n\r\n// const persistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//   }\r\n\r\n//   const middleware = [\r\n//     ...getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n//     logger,\r\n//   ];\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer,\r\n//     filter: contactsReducer,\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// const store = configureStore({\r\n//     reducer: persistedReducer,\r\n//     middleware,\r\n//     devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// const persistor = persistStore(store)\r\n\r\n// export default { store, persistor };"]},"metadata":{},"sourceType":"module"}
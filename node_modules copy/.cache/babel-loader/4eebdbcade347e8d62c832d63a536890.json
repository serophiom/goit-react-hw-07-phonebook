{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stas\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\Filter\\\\Filter.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Filter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  change,\n  filter,\n  contacts\n}) => {\n  function getFilteredName(event) {\n    const {\n      value\n    } = event.currentTarget;\n    change(value);\n  }\n\n  return contacts.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Find contacts by Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"filter-input\",\n        type: \"text\",\n        name: \"filter\",\n        value: filter,\n        onChange: getFilteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There is no contacts in your Phonebook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Filter;\nFilter.propTypes = {\n  change: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id))\n});\n\nexport default connect()(Filter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/Filter/Filter.js"],"names":["React","connect","PropTypes","Filter","change","filter","contacts","getFilteredName","event","value","currentTarget","length","propTypes","func","isRequired","string","array","mapStateToProps","state","mapDispatchToProps","dispatch","onDeleteContact","id","contactsActions","deleteContact"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AAC7C,WAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,aAAxB;AACAN,IAAAA,MAAM,CAACK,KAAD,CAAN;AACH;;AAED,SAAOH,QAAQ,CAACK,MAAT,KAAoB,CAApB,gBACH;AAAA,2BACA;AAAA,uDACyB;AACrB,QAAA,SAAS,EAAC,cADW;AAErB,QAAA,IAAI,EAAC,MAFgB;AAGrB,QAAA,IAAI,EAAC,QAHgB;AAIrB,QAAA,KAAK,EAAEN,MAJc;AAKrB,QAAA,QAAQ,EAAEE;AALW;AAAA;AAAA;AAAA;AAAA,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADG,gBAcH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ;AAgBH,CAtBD;;KAAMJ,M;AAwBNA,MAAM,CAACS,SAAP,GAAmB;AACfR,EAAAA,MAAM,EAAEF,SAAS,CAACW,IAAV,CAAeC,UADR;AAEfT,EAAAA,MAAM,EAAEH,SAAS,CAACa,MAAV,CAAiBD,UAFV;AAGfR,EAAAA,QAAQ,EAAEJ,SAAS,CAACc,KAAV,CAAgBF;AAHX,CAAnB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,KAAK,EAAES,KAAK,CAACZ,QAAN,CAAeD;AADU,CAAZ,CAAxB;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,eAAe,EAAGC,EAAD,IAAQF,QAAQ,CAACG,eAAe,CAACC,aAAhB,CAA8BF,EAA9B,CAAD;AADG,CAAL,CAAnC;;AAIA,eAAerB,OAAO,GAAGE,MAAH,CAAtB","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ change, filter, contacts }) => {\r\n    function getFilteredName (event) {\r\n        const { value } = event.currentTarget;\r\n        change(value);\r\n    }\r\n\r\n    return contacts.length !== 0 ? (\r\n        <div>\r\n        <label>\r\n            Find contacts by Name<input\r\n            className=\"filter-input\"\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={getFilteredName}\r\n        />\r\n        </label>\r\n        \r\n        </div>\r\n        ) : (\r\n        <p>There is no contacts in your Phonebook</p>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n    change: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n    contacts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),        \r\n});\r\n\r\nexport default connect()(Filter);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';// import * as contactsAPI from './contacts-api';\nimport{fetchContactsRequest,fetchContactsSuccess,fetchContactsError,addContactRequest,addContactSuccess,addContactError,deleteContactRequest,deleteContactSuccess,deleteContactError}from'./contacts-actions';axios.defaults.baseURL='http://localhost:3000';export var fetchContacts=function fetchContacts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(fetchContactsRequest());_context.prev=1;_context.next=4;return axios.get('/contacts');case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch(fetchContactsSuccess(data));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);dispatch(fetchContactsError(_context.t0));case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var addContact=function addContact(name,number){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var contact,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:contact={name:name,number:number};dispatch(addContactRequest());_context2.prev=2;_context2.next=5;return axios.post('/contacts',contact);case 5:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;dispatch(addContactSuccess(data));_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](2);dispatch(addContactError(_context2.t0));case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[2,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var deleteContact=function deleteContact(contactId){return function(dispatch){dispatch(deleteContactRequest());axios.delete(\"contacts/\".concat(contactId)).then(function(){return dispatch(deleteContactSuccess(contactId));}).catch(function(error){return dispatch(deleteContactError(error));});};};","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-operations.js"],"names":["axios","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","defaults","baseURL","fetchContacts","dispatch","get","data","addContact","name","number","contact","post","deleteContact","contactId","delete","then","catch","error"],"mappings":"6VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,OACEC,oBADF,CAEEC,oBAFF,CAGEC,kBAHF,CAIEC,iBAJF,CAKEC,iBALF,CAMEC,eANF,CAOEC,oBAPF,CAQEC,oBARF,CASEC,kBATF,KAUO,oBAVP,CAYAT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAyB,uBAAzB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,kGAAM,iBAAMC,QAAN,4IAC/BA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR,CAD+B,sCAIND,CAAAA,KAAK,CAACc,GAAN,CAAU,WAAV,CAJM,uCAIrBC,IAJqB,kBAIrBA,IAJqB,CAK7BF,QAAQ,CAACX,oBAAoB,CAACa,IAAD,CAArB,CAAR,CAL6B,+EAO7BF,QAAQ,CAACV,kBAAkB,aAAnB,CAAR,CAP6B,oEAAN,gEAAtB,CAWL,MAAO,IAAMa,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAOC,MAAP,kGAAkB,kBAAML,QAAN,yJACpCM,OADoC,CAC1B,CACdF,IAAI,CAAJA,IADc,CAEdC,MAAM,CAANA,MAFc,CAD0B,CAM1CL,QAAQ,CAACT,iBAAiB,EAAlB,CAAR,CAN0C,wCASjBJ,CAAAA,KAAK,CAACoB,IAAN,CAAW,WAAX,CAAwBD,OAAxB,CATiB,yCAShCJ,IATgC,mBAShCA,IATgC,CAUxCF,QAAQ,CAACR,iBAAiB,CAACU,IAAD,CAAlB,CAAR,CAVwC,qFAYxCF,QAAQ,CAACP,eAAe,cAAhB,CAAR,CAZwC,uEAAlB,kEAAnB,CAgBP,MAAO,IAAMe,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,SAAS,QAAI,UAAAT,QAAQ,CAAI,CACpDA,QAAQ,CAACN,oBAAoB,EAArB,CAAR,CAEAP,KAAK,CACFuB,MADH,oBACsBD,SADtB,GAEGE,IAFH,CAEQ,iBAAMX,CAAAA,QAAQ,CAACL,oBAAoB,CAACc,SAAD,CAArB,CAAd,EAFR,EAGGG,KAHH,CAGS,SAAAC,KAAK,QAAIb,CAAAA,QAAQ,CAACJ,kBAAkB,CAACiB,KAAD,CAAnB,CAAZ,EAHd,EAID,CAPqC,EAA/B","sourcesContent":["import axios from 'axios';\r\n// import * as contactsAPI from './contacts-api';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n  \r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(fetchContactsError(error));\r\n    }\r\n  };\r\n  \r\n  export const addContact = (name, number) => async dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n  \r\n    dispatch(addContactRequest());\r\n  \r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n  \r\n  export const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n  \r\n    axios\r\n      .delete(`contacts/${contactId}`)\r\n      .then(() => dispatch(deleteContactSuccess(contactId)))\r\n      .catch(error => dispatch(deleteContactError(error)));\r\n  };\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\nconst persistConfig = {\n  key: 'contacts',\n  storage\n};\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n}), logger];\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: contactsReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n});\nconst persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","logger","createStore","composeWithDevTools","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","contactsReducer","persistConfig","key","middleware","serializableCheck","ignoredActions","rootReducer","contacts","filter","persistedReducer","store","reducer","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,EAAgDC,eAAhD,QAAuE,kBAAvE;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,EACQC,cADR,EAEQC,KAFR,EAGQC,SAHR,EAIQC,KAJR,EAKQC,OALR,EAMQC,KANR,EAOQC,QAPR,QAQe,eARf;AASA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,UADa;AAElBH,EAAAA;AAFkB,CAAtB;AAKE,MAAMI,UAAU,GAAG,CACjB,GAAGjB,oBAAoB,CAAC;AACtBkB,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACZ,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,EAMjBV,MANiB,CAAnB;AASF,MAAMkB,WAAW,GAAGnB,eAAe,CAAC;AAChCoB,EAAAA,QAAQ,EAAEP,eADsB;AAEhCQ,EAAAA,MAAM,EAAER;AAFwB,CAAD,CAAnC;AAKA,MAAMS,gBAAgB,GAAGjB,cAAc,CAACS,aAAD,EAAgBK,WAAhB,CAAvC;AAEA,MAAMI,KAAK,GAAGzB,cAAc,CAAC;AACzB0B,EAAAA,OAAO,EAAEF,gBADgB;AAEzBN,EAAAA,UAFyB;AAGzBS,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAHV,CAAD,CAA5B;AAMA,MAAMC,SAAS,GAAGzB,YAAY,CAACmB,KAAD,CAA9B;AAEA,eAAe;AAAEA,EAAAA,KAAF;AAASM,EAAAA;AAAT,CAAf","sourcesContent":["import { configureStore, getDefaultMiddleware , combineReducers } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore,\r\n        persistReducer,\r\n        FLUSH,\r\n        REHYDRATE,\r\n        PAUSE,\r\n        PERSIST,\r\n        PURGE,\r\n        REGISTER,\r\n        } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts-reducer';\r\n\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n  }\r\n\r\n  const middleware = [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    logger,\r\n  ];\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer,\r\n    filter: contactsReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}
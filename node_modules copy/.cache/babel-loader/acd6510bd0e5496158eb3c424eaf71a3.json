{"ast":null,"code":"// import { configureStore } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\n// import contatsReduser from \"./reduser\";\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer'; // const persistConfig = {\n//     key: 'contacts',\n//     storage,\n//   }\n//   const middleware = [\n//     ...getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n//     logger,\n//   ];\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: contactsReducer\n}); // const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV === 'development'\n}); // const store = configureStore({\n//   reducer: {\n//     contacts: contatsReduser,\n//   },\n//   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n// });\n// const persistor = persistStore(store)\n\nexport default store; // import { configureStore, getDefaultMiddleware , combineReducers } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\n// import { persistStore,\n//         persistReducer,\n//         FLUSH,\n//         REHYDRATE,\n//         PAUSE,\n//         PERSIST,\n//         PURGE,\n//         REGISTER,\n//         } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// import contactsReducer from './contacts-reducer';\n// const persistConfig = {\n//     key: 'contacts',\n//     storage,\n//   }\n//   const middleware = [\n//     ...getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n//     logger,\n//   ];\n// const rootReducer = combineReducers({\n//     contacts: contactsReducer,\n//     filter: contactsReducer,\n// });\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// const store = configureStore({\n//     reducer: persistedReducer,\n//     middleware,\n//     devTools: process.env.NODE_ENV === 'development',\n// });\n// const persistor = persistStore(store)\n// export default { store, persistor };","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","combineReducers","logger","storage","contactsReducer","rootReducer","contacts","filter","store","reducer","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAChCK,EAAAA,QAAQ,EAAEF,eADsB;AAEhCG,EAAAA,MAAM,EAAEH;AAFwB,CAAD,CAAnC,C,CAKA;;AAEA,MAAMI,KAAK,GAAGR,cAAc,CAAC;AACzBS,EAAAA,OAAO,EAAEJ,WADgB;AAEzBK,EAAAA,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,GAAGC,MAAvB,CAA8BV,MAA9B,CAFb;AAGzBW,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAHV,CAAD,CAA5B,C,CAMA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAeR,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import logger from \"redux-logger\";\r\n// import contatsReduser from \"./reduser\";\r\n\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts-reducer';\r\n\r\n// const persistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//   }\r\n\r\n//   const middleware = [\r\n//     ...getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n//     logger,\r\n//   ];\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer,\r\n    filter: contactsReducer,\r\n});\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: contatsReduser,\r\n//   },\r\n//   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n// });\r\n\r\n// const persistor = persistStore(store)\r\n\r\nexport default store;\r\n\r\n// import { configureStore, getDefaultMiddleware , combineReducers } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\n// import { persistStore,\r\n//         persistReducer,\r\n//         FLUSH,\r\n//         REHYDRATE,\r\n//         PAUSE,\r\n//         PERSIST,\r\n//         PURGE,\r\n//         REGISTER,\r\n//         } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n// import contactsReducer from './contacts-reducer';\r\n\r\n// const persistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//   }\r\n\r\n//   const middleware = [\r\n//     ...getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n//     logger,\r\n//   ];\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer,\r\n//     filter: contactsReducer,\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// const store = configureStore({\r\n//     reducer: persistedReducer,\r\n//     middleware,\r\n//     devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// const persistor = persistStore(store)\r\n\r\n// export default { store, persistor };"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from './contacts-actions';\nconst contacts = createReducer([], {\n  [contactsActions.addContact]: (state, action) => [...state, action.payload],\n  [contactsActions.deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload)\n});\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (state, action) => action.payload\n}); // const contacts = (state = [], {type, payload}) => {\n//     switch(type) {\n//         case types.ADD:\n//             return [...state, payload];\n//         case types.DELETE:\n//             return state.filter(contact => contact.id !== payload);\n//         default:\n//             return state;\n//     }\n// }\n// const filter = (state = '', { type, payload }) => {\n//     switch(type) {\n//         case types.FILTER:\n//             return payload;\n//         default:\n//             return state;\n//     }\n// }\n\nexport default combineReducers({\n  contacts,\n  filter\n});","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","contactsActions","contacts","addContact","state","action","payload","deleteContact","filter","contact","id","changeFilter"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,MAAMC,QAAQ,GAAGF,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACC,eAAe,CAACE,UAAjB,GAA8B,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CADlB;AAE/B,GAACL,eAAe,CAACM,aAAjB,GAAiC,CAACH,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACI,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACC,OAA9C;AAFrB,CAAL,CAA9B;AAKA,MAAME,MAAM,GAAGR,aAAa,CAAC,EAAD,EAAK;AAC7B,GAACC,eAAe,CAACU,YAAjB,GAAgC,CAACP,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAD7B,CAAL,CAA5B,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeP,eAAe,CAAC;AAC3BG,EAAAA,QAD2B;AAE3BM,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst contacts = createReducer([], {\r\n    [contactsActions.addContact]: (state, action) => [...state, action.payload],\r\n    [contactsActions.deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\n// const contacts = (state = [], {type, payload}) => {\r\n//     switch(type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n\r\n//         case types.DELETE:\r\n//             return state.filter(contact => contact.id !== payload);\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n    \r\n// const filter = (state = '', { type, payload }) => {\r\n//     switch(type) {\r\n//         case types.FILTER:\r\n//             return payload;\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter\r\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from './contacts-actions';\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (_, {\n    payload\n  }) => payload,\n  [contactsActions.addContactSuccess]: (state, {\n    payload\n  }) => [...state, payload],\n  [contactsActions.deleteContactSuccess]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n});\nconst isLoading = createReducer(false, {\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false\n});\nconst error = createReducer(null, {\n  [contactsActions.fetchContactsError]: (_, action) => action.payload,\n  [contactsActions.fetchContactsRequest]: () => null,\n  [contactsActions.addContactError]: (_, action) => action.payload,\n  [contactsActions.addContactRequest]: () => null,\n  [contactsActions.deleteContactError]: (_, action) => action.payload,\n  [contactsActions.deleteContactRequest]: () => null\n});\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, action) => action.payload\n});\nexport default combineReducers({\n  items,\n  isLoading,\n  error,\n  filter\n}); // const itemReducer = createReducer([], {\n//     [addContact]: (state, action) => [...state, action.payload],\n//     [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\n// });\n// const filterReducer = createReducer('', {\n//     [changeFilter]: (_, action) => action.payload,\n// });\n// export default combineReducers({\n//     items: itemReducer,\n//     filter: filterReducer,\n// });","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["createReducer","contactsActions","items","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","isLoading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","error","action","changeFilter","combineReducers"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,kBAA9B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,MAAMC,KAAK,GAAGF,aAAa,CAAC,EAAD,EAAK;AAC5B,GAACC,eAAe,CAACE,oBAAjB,GAAwC,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OADhC;AAE5B,GAACJ,eAAe,CAACK,iBAAjB,GAAqC,CAACC,KAAD,EAAQ;AAAEF,IAAAA;AAAF,GAAR,KAAwB,CAAC,GAAGE,KAAJ,EAAWF,OAAX,CAFjC;AAG5B,GAACJ,eAAe,CAACO,oBAAjB,GAAwC,CAACD,KAAD,EAAQ;AAAEF,IAAAA;AAAF,GAAR,KACtCE,KAAK,CAACE,MAAN,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKL,OAAhC;AAJ0B,CAAL,CAA3B;AAOE,MAAMM,SAAS,GAAGX,aAAa,CAAC,KAAD,EAAQ;AACrC,GAACC,eAAe,CAACW,oBAAjB,GAAwC,MAAM,IADT;AAErC,GAACX,eAAe,CAACE,oBAAjB,GAAwC,MAAM,KAFT;AAGrC,GAACF,eAAe,CAACY,kBAAjB,GAAsC,MAAM,KAHP;AAKrC,GAACZ,eAAe,CAACa,iBAAjB,GAAqC,MAAM,IALN;AAMrC,GAACb,eAAe,CAACK,iBAAjB,GAAqC,MAAM,KANN;AAOrC,GAACL,eAAe,CAACc,eAAjB,GAAmC,MAAM,KAPJ;AASrC,GAACd,eAAe,CAACe,oBAAjB,GAAwC,MAAM,IATT;AAUrC,GAACf,eAAe,CAACO,oBAAjB,GAAwC,MAAM,KAVT;AAWrC,GAACP,eAAe,CAACgB,kBAAjB,GAAsC,MAAM;AAXP,CAAR,CAA/B;AAcA,MAAMC,KAAK,GAAGlB,aAAa,CAAC,IAAD,EAAO;AAChC,GAACC,eAAe,CAACY,kBAAjB,GAAsC,CAACT,CAAD,EAAIe,MAAJ,KAAeA,MAAM,CAACd,OAD5B;AAEhC,GAACJ,eAAe,CAACW,oBAAjB,GAAwC,MAAM,IAFd;AAIhC,GAACX,eAAe,CAACc,eAAjB,GAAmC,CAACX,CAAD,EAAIe,MAAJ,KAAeA,MAAM,CAACd,OAJzB;AAKhC,GAACJ,eAAe,CAACa,iBAAjB,GAAqC,MAAM,IALX;AAOhC,GAACb,eAAe,CAACgB,kBAAjB,GAAsC,CAACb,CAAD,EAAIe,MAAJ,KAAeA,MAAM,CAACd,OAP5B;AAQhC,GAACJ,eAAe,CAACe,oBAAjB,GAAwC,MAAM;AARd,CAAP,CAA3B;AAWA,MAAMP,MAAM,GAAGT,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACC,eAAe,CAACmB,YAAjB,GAAgC,CAAChB,CAAD,EAAIe,MAAJ,KAAeA,MAAM,CAACd;AADvB,CAAL,CAA5B;AAIA,eAAegB,eAAe,CAAC;AAC7BnB,EAAAA,KAD6B;AAE7BS,EAAAA,SAF6B;AAG7BO,EAAAA,KAH6B;AAI7BT,EAAAA;AAJ6B,CAAD,CAA9B,C,CAaF;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n    [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n    [contactsActions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [contactsActions.deleteContactSuccess]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  });\r\n  \r\n  const isLoading = createReducer(false, {\r\n    [contactsActions.fetchContactsRequest]: () => true,\r\n    [contactsActions.fetchContactsSuccess]: () => false,\r\n    [contactsActions.fetchContactsError]: () => false,\r\n  \r\n    [contactsActions.addContactRequest]: () => true,\r\n    [contactsActions.addContactSuccess]: () => false,\r\n    [contactsActions.addContactError]: () => false,\r\n  \r\n    [contactsActions.deleteContactRequest]: () => true,\r\n    [contactsActions.deleteContactSuccess]: () => false,\r\n    [contactsActions.deleteContactError]: () => false,\r\n  });\r\n  \r\n  const error = createReducer(null, {\r\n    [contactsActions.fetchContactsError]: (_, action) => action.payload,\r\n    [contactsActions.fetchContactsRequest]: () => null,\r\n  \r\n    [contactsActions.addContactError]: (_, action) => action.payload,\r\n    [contactsActions.addContactRequest]: () => null,\r\n  \r\n    [contactsActions.deleteContactError]: (_, action) => action.payload,\r\n    [contactsActions.deleteContactRequest]: () => null,\r\n  });\r\n  \r\n  const filter = createReducer('', {\r\n    [contactsActions.changeFilter]: (_, action) => action.payload,\r\n  });\r\n  \r\n  export default combineReducers({\r\n    items,\r\n    isLoading,\r\n    error,\r\n    filter,\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const itemReducer = createReducer([], {\r\n//     [addContact]: (state, action) => [...state, action.payload],\r\n//     [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n// });\r\n\r\n// const filterReducer = createReducer('', {\r\n//     [changeFilter]: (_, action) => action.payload,\r\n// });\r\n\r\n// export default combineReducers({\r\n//     items: itemReducer,\r\n//     filter: filterReducer,\r\n// });"]},"metadata":{},"sourceType":"module"}
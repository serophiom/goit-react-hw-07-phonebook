{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import{changeFilter}from'../redux/contacts-actions';import'./Filter.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Filter=function Filter(){var contacts=useSelector(function(state){return state.contacts.items;});var filter=useSelector(function(state){return state.contacts.filter;});var dispatch=useDispatch();function getFilteredName(event){var value=event.currentTarget.value;handleFilter(value);}var handleFilter=function handleFilter(value){dispatch(changeFilter(value));};return contacts.length!==0?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Find contacts by Name\",/*#__PURE__*/_jsx(\"input\",{className:\"filter-input\",type:\"text\",name:\"filter\",value:filter,onChange:getFilteredName})]})}):/*#__PURE__*/_jsx(\"p\",{children:\"There is no contacts in your Phonebook\"});};export default Filter;","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/Filter/Filter.js"],"names":["React","useSelector","useDispatch","changeFilter","Filter","contacts","state","items","filter","dispatch","getFilteredName","event","value","currentTarget","handleFilter","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,YAAT,KAA6B,2BAA7B,CACA,MAAO,cAAP,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACD,QAAN,CAAeE,KAAnB,EAAN,CAA5B,CACA,GAAMC,CAAAA,MAAM,CAAGP,WAAW,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACD,QAAN,CAAeG,MAAnB,EAAN,CAA1B,CACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAGA,QAASQ,CAAAA,eAAT,CAA0BC,KAA1B,CAAiC,CAC7B,GAAQC,CAAAA,KAAR,CAAkBD,KAAK,CAACE,aAAxB,CAAQD,KAAR,CACAE,YAAY,CAACF,KAAD,CAAZ,CACH,CAED,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,KAAK,CAAI,CAC1BH,QAAQ,CAACN,YAAY,CAACS,KAAD,CAAb,CAAR,CACH,CAFD,CAIA,MAAOP,CAAAA,QAAQ,CAACU,MAAT,GAAoB,CAApB,cACH,kCACA,8DACyB,cACrB,SAAS,CAAC,cADW,CAErB,IAAI,CAAC,MAFgB,CAGrB,IAAI,CAAC,QAHgB,CAIrB,KAAK,CAAEP,MAJc,CAKrB,QAAQ,CAAEE,eALW,EADzB,GADA,EADG,cAcH,6DAdJ,CAgBH,CA/BD,CAiCA,cAAeN,CAAAA,MAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../redux/contacts-actions';\r\nimport './Filter.css';\r\n\r\nconst Filter = () => {\r\n    const contacts = useSelector(state => state.contacts.items);\r\n    const filter = useSelector(state => state.contacts.filter);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    function getFilteredName (event) {\r\n        const { value } = event.currentTarget;\r\n        handleFilter(value);\r\n    }\r\n\r\n    const handleFilter = value => {\r\n        dispatch(changeFilter(value))\r\n    };\r\n\r\n    return contacts.length !== 0 ? (\r\n        <div>\r\n        <label>\r\n            Find contacts by Name<input\r\n            className=\"filter-input\"\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={getFilteredName}\r\n        />\r\n        </label>\r\n        \r\n        </div>\r\n        ) : (\r\n        <p>There is no contacts in your Phonebook</p>\r\n    )\r\n};\r\n\r\nexport default Filter;"]},"metadata":{},"sourceType":"module"}
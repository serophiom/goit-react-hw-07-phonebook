{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from './contacts-actions';\nconst contacts = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload]\n}); // const contacts = (state = [], {type, payload}) => {\n//     switch(type) {\n//         case types.ADD:\n//             return [...state, payload];\n//         case types.DELETE:\n//             return state.filter(contact => contact.id !== payload);\n//         default:\n//             return state;\n//     }\n// }\n\nconst filter = (state = '', {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contacts,\n  filter\n});","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","contactsActions","contacts","addContact","state","action","payload","filter","type","types","FILTER"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,MAAMC,QAAQ,GAAGF,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACG,UAAD,GAAc,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB;AADF,CAAL,CAA9B,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,CAACH,KAAK,GAAG,EAAT,EAAa;AAAEI,EAAAA,IAAF;AAAQF,EAAAA;AAAR,CAAb,KAAmC;AAC9C,UAAOE,IAAP;AACI,SAAKC,KAAK,CAACC,MAAX;AACI,aAAOJ,OAAP;;AAEJ;AACI,aAAOF,KAAP;AALR;AAOH,CARD;;AAUA,eAAeL,eAAe,CAAC;AAC3BG,EAAAA,QAD2B;AAE3BK,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst contacts = createReducer([], {\r\n    [addContact]: (state, action) => [...state, action.payload]\r\n});\r\n\r\n// const contacts = (state = [], {type, payload}) => {\r\n//     switch(type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n\r\n//         case types.DELETE:\r\n//             return state.filter(contact => contact.id !== payload);\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n    \r\nconst filter = (state = '', { type, payload }) => {\r\n    switch(type) {\r\n        case types.FILTER:\r\n            return payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter\r\n});"]},"metadata":{},"sourceType":"module"}
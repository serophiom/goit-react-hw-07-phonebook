{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stas\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\Phonebook\\\\Phonebook.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormAddContacts from '../FormAddContacts/FormAddContacts';\nimport Contacts from '../Contacts/Contacts';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from '../Filter/Filter';\nimport './Phonebook.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Phonebook() {\n  _s();\n\n  // const [contacts, setContacts] = useState(\n  //     JSON.parse(window.localStorage.getItem('contacts')) ?? \n  //         [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n  //         {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n  //         {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n  //         {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\n  // );\n  // const [filter, setFilter] = useState('');\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = (name, number) => {\n    const alreadyAddedContact = contacts.find(contact => contact.name === name);\n\n    if (alreadyAddedContact) {\n      alert(`${alreadyAddedContact.name} is already in contacts`);\n      return;\n    } // dispatch(actions.addContact({ name, number }));\n\n\n    setContacts([...contacts, {\n      id: uuidv4(),\n      name,\n      number\n    }]);\n  };\n\n  const handleFilter = value => {\n    setFilter(value);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const toLowerCase = filter.toLowerCase();\n  const showContacts = contacts.filter(contact => contact.name.toLowerCase().includes(toLowerCase));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"phonebook\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormAddContacts, {\n      onSubmit: formSubmitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      change: handleFilter,\n      filter: filter,\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Contacts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Phonebook, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Phonebook;\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: () => null,\n  showContacts: () => null\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n\nvar _c;\n\n$RefreshReg$(_c, \"Phonebook\");","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/Phonebook/Phonebook.js"],"names":["useState","useEffect","connect","FormAddContacts","Contacts","v4","uuidv4","Filter","Phonebook","window","localStorage","setItem","JSON","stringify","contacts","formSubmitHandler","name","number","alreadyAddedContact","find","contact","alert","setContacts","id","handleFilter","value","setFilter","deleteContact","contactId","filter","toLowerCase","showContacts","includes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,iBAAP;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAP,EAAAA,SAAS,CAAE,MAAM;AACbQ,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAxC;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMC,iBAAiB,GAAG,CAAEC,IAAF,EAAQC,MAAR,KAAoB;AAC1C,UAAMC,mBAAmB,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACJ,IAAR,KAAiBA,IAA1C,CAA5B;;AACA,QAAIE,mBAAJ,EAAyB;AACrBG,MAAAA,KAAK,CAAE,GAAEH,mBAAmB,CAACF,IAAK,yBAA7B,CAAL;AACA;AACH,KALyC,CAM1C;;;AAEAM,IAAAA,WAAW,CAAE,CAAC,GAAGR,QAAJ,EAAc;AAAES,MAAAA,EAAE,EAAEjB,MAAM,EAAZ;AAAgBU,MAAAA,IAAhB;AAAsBC,MAAAA;AAAtB,KAAd,CAAF,CAAX;AACH,GATD;;AAWA,QAAMO,YAAY,GAAGC,KAAK,IAAI;AAC1BC,IAAAA,SAAS,CAACD,KAAD,CAAT;AACH,GAFD;;AAIA,QAAME,aAAa,GAAIC,SAAD,IAAe;AACjCN,IAAAA,WAAW,CAACR,QAAQ,CAACe,MAAT,CAAgBT,OAAO,IAAIA,OAAO,CAACG,EAAR,KAAeK,SAA1C,CAAD,CAAX;AACH,GAFD;;AAIA,QAAME,WAAW,GAAGD,MAAM,CAACC,WAAP,EAApB;AACA,QAAMC,YAAY,GAAGjB,QAAQ,CAACe,MAAT,CAAgBT,OAAO,IACvCA,OAAO,CAACJ,IAAR,CAAac,WAAb,GAA2BE,QAA3B,CAAoCF,WAApC,CADgB,CAArB;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEf;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAES,YAAhB;AAA8B,MAAA,MAAM,EAAEK,MAAtC;AAA8C,MAAA,QAAQ,EAAEf;AAAxD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAhDQN,S;;KAAAA,S;;AAkDT,MAAMyB,eAAe,GAAIC,KAAD,KAAY;AAChCpB,EAAAA,QAAQ,EAAEoB,KAAK,CAACpB;AADgB,CAAZ,CAAxB;;AAIA,MAAMqB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,aAAa,EAAE,MAAM,IADe;AAEpCI,EAAAA,YAAY,EAAE,MAAM;AAFgB,CAAL,CAAnC;;AAKA,eAAe7B,OAAO,CAAC+B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3B,SAA7C,CAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormAddContacts from '../FormAddContacts/FormAddContacts';\r\nimport Contacts from '../Contacts/Contacts';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Filter from '../Filter/Filter';\r\nimport './Phonebook.css';\r\n\r\nfunction Phonebook() {\r\n    // const [contacts, setContacts] = useState(\r\n    //     JSON.parse(window.localStorage.getItem('contacts')) ?? \r\n    //         [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    //         {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    //         {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    //         {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\r\n    // );\r\n    // const [filter, setFilter] = useState('');\r\n\r\n    useEffect (() => {\r\n        window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }, [contacts]);\r\n\r\n    const formSubmitHandler = ( name, number ) => {\r\n        const alreadyAddedContact = contacts.find(contact => contact.name === name);\r\n        if (alreadyAddedContact) {\r\n            alert(`${alreadyAddedContact.name} is already in contacts`);\r\n            return;\r\n        }\r\n        // dispatch(actions.addContact({ name, number }));\r\n\r\n        setContacts ([...contacts, { id: uuidv4(), name, number }]);\r\n    };\r\n\r\n    const handleFilter = value => {\r\n        setFilter(value);\r\n    };\r\n\r\n    const deleteContact = (contactId) => {\r\n        setContacts(contacts.filter(contact => contact.id !== contactId));\r\n    };\r\n\r\n    const toLowerCase = filter.toLowerCase();\r\n    const showContacts = contacts.filter(contact =>\r\n         contact.name.toLowerCase().includes(toLowerCase)\r\n    );\r\n\r\n    return (\r\n        <div className=\"phonebook\">\r\n            <h1>Phonebook</h1>\r\n            <FormAddContacts onSubmit={formSubmitHandler}/>\r\n            <h2>Contacts</h2>\r\n            <Filter change={handleFilter} filter={filter} contacts={contacts}/>\r\n            {/* <Contacts contacts={contacts} showContacts={showContacts} onDeleteContact={deleteContact}/> */}\r\n            <Contacts />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteContact: () => null,\r\n    showContacts: () => null,        \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios'; // import * as contactsAPI from './contacts-api';\n\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } from './contacts-actions'; // axios.defaults.baseURL = 'http://localhost:3000';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number\n  };\n  dispatch(addContactRequest());\n\n  try {\n    const {\n      data\n    } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`contacts/${contactId}`).then(() => dispatch(deleteContactSuccess(contactId))).catch(error => dispatch(deleteContactError(error)));\n};","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-operations.js"],"names":["axios","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContacts","dispatch","data","get","error","addContact","name","number","contact","post","deleteContact","contactId","delete","then","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,eANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,kBATF,QAUO,oBAVP,C,CAYA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjDA,EAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAU,WAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACT,oBAAoB,CAACU,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACR,kBAAkB,CAACW,KAAD,CAAnB,CAAR;AACD;AACF,CATI;AAWL,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB,MAAMN,QAAN,IAAkB;AAC5D,QAAMO,OAAO,GAAG;AACdF,IAAAA,IADc;AAEdC,IAAAA;AAFc,GAAhB;AAKAN,EAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACmB,IAAN,CAAW,WAAX,EAAwBD,OAAxB,CAAvB;AACAP,IAAAA,QAAQ,CAACN,iBAAiB,CAACO,IAAD,CAAlB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACL,eAAe,CAACQ,KAAD,CAAhB,CAAR;AACD;AACF,CAdM;AAgBP,OAAO,MAAMM,aAAa,GAAGC,SAAS,IAAIV,QAAQ,IAAI;AACpDA,EAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AAEAP,EAAAA,KAAK,CACFsB,MADH,CACW,YAAWD,SAAU,EADhC,EAEGE,IAFH,CAEQ,MAAMZ,QAAQ,CAACH,oBAAoB,CAACa,SAAD,CAArB,CAFtB,EAGGG,KAHH,CAGSV,KAAK,IAAIH,QAAQ,CAACF,kBAAkB,CAACK,KAAD,CAAnB,CAH1B;AAID,CAPM","sourcesContent":["import axios from 'axios';\r\n// import * as contactsAPI from './contacts-api';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n  \r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(fetchContactsError(error));\r\n    }\r\n  };\r\n  \r\n  export const addContact = (name, number) => async dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n  \r\n    dispatch(addContactRequest());\r\n  \r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n  \r\n  export const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n  \r\n    axios\r\n      .delete(`contacts/${contactId}`)\r\n      .then(() => dispatch(deleteContactSuccess(contactId)))\r\n      .catch(error => dispatch(deleteContactError(error)));\r\n  };\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stas\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\Contacts\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts-actions';\nimport './Contacts.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = ({}) => {\n  _s();\n\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n  const toLowerCase = filter.toLowerCase();\n  const showContacts = contacts.filter(contact => contact.name.toLowerCase().includes(toLowerCase));\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return contacts && /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: showContacts.map(({\n      id,\n      name,\n      number\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"contacts__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contacts__text\",\n        children: [name, \": \", number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDeleteContact(id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contacts, \"4/hiBqJ+xopxs+TIcpFhpsY7idI=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Contacts;\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  showContacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired\n};\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/Stas/Documents/GitHub/goit-react-hw-06-phonebook/src/Contacts/Contacts.js"],"names":["React","useSelector","useDispatch","deleteContact","PropTypes","Contacts","contacts","state","items","dispatch","filter","toLowerCase","showContacts","contact","name","includes","onDeleteContact","contactId","map","id","number","propTypes","array","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC,EAAD,KAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,KAAzB,CAA5B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,MAAM,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeI,MAAzB,CAA1B;AAEA,QAAMC,WAAW,GAAGD,MAAM,CAACC,WAAP,EAApB;AACA,QAAMC,YAAY,GAAGN,QAAQ,CAACI,MAAT,CAAgBG,OAAO,IACvCA,OAAO,CAACC,IAAR,CAAaH,WAAb,GAA2BI,QAA3B,CAAoCJ,WAApC,CADgB,CAArB;;AAIA,QAAMK,eAAe,GAAIC,SAAD,IAAe;AACnCR,IAAAA,QAAQ,CAACN,aAAa,CAACc,SAAD,CAAd,CAAR;AACH,GAFD;;AAIA,SAAOX,QAAQ,iBACX;AAAA,cACKM,YAAY,CAACM,GAAb,CAAiB,CAAC;AAAEC,MAAAA,EAAF;AAAML,MAAAA,IAAN;AAAYM,MAAAA;AAAZ,KAAD,kBACd;AAAa,MAAA,SAAS,EAAC,gBAAvB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,mBAA+BN,IAA/B,QAAuCM,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMJ,eAAe,CAACG,EAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAASA,EAAT;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzBD;;GAAMd,Q;UACeJ,W,EACAC,W,EACFD,W;;;KAHbI,Q;AA2BNA,QAAQ,CAACgB,SAAT,GAAqB;AACjBf,EAAAA,QAAQ,EAAEF,SAAS,CAACkB,KAAV,CAAgBC,UADT;AAEjBX,EAAAA,YAAY,EAAER,SAAS,CAACkB,KAAV,CAAgBC,UAFb;AAGjBP,EAAAA,eAAe,EAAEZ,SAAS,CAACoB,IAAV,CAAeD;AAHf,CAArB;AAMA,eAAelB,QAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../redux/contacts-actions';\r\nimport './Contacts.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({   }) => {\r\n    const contacts = useSelector(state => state.contacts.items);\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(state => state.contacts.filter);\r\n\r\n    const toLowerCase = filter.toLowerCase();\r\n    const showContacts = contacts.filter(contact =>\r\n         contact.name.toLowerCase().includes(toLowerCase)\r\n    );\r\n\r\n    const onDeleteContact = (contactId) => {\r\n        dispatch(deleteContact(contactId))\r\n    };\r\n\r\n    return contacts && (\r\n        <ul>\r\n            {showContacts.map(({ id, name, number }) => (\r\n                <li key={id} className=\"contacts__item\">\r\n                    <p className=\"contacts__text\">{name}: {number}</p>\r\n                    <button onClick={() => onDeleteContact(id)}>delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n    \r\n};\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    showContacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-selectors.js","FormAddContacts/FormAddContacts.js","Contacts/Contacts.js","Filter/Filter.js","Phonebook/Phonebook.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getShowContacts","createSelector","toLowerCase","contact","name","includes","FormAddContacts","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","formSubmitHandler","alreadyAddedContact","find","alert","a","post","data","addContact","handleChange","event","target","value","reset","onSubmit","preventDefault","className","type","pattern","title","required","onChange","Contacts","showContacts","useEffect","get","onDeleteContact","contactId","delete","then","catch","error","deleteContact","map","id","onClick","Filter","handleFilter","length","currentTarget","Phonebook","App","createReducer","_","action","payload","isLoading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ec7daca.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\n// fetch pending\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\n// fetch fulfilled\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\n// fetch rejected\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\n// add pending\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\n// add fulfilled\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\n// add rejected\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\n// delete pending\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\n// delete fulfilled\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\n// delete rejected\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:7777';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n  \r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(fetchContactsError(error));\r\n    }\r\n  };\r\n  \r\n  export const addContact = (name, number) => async dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n  \r\n    dispatch(addContactRequest());\r\n  \r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n  \r\n  export const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n  \r\n    axios\r\n      .delete(`/contacts/${contactId}`)\r\n      .then(() => dispatch(deleteContactSuccess(contactId)))\r\n      .catch(error => dispatch(deleteContactError(error)));\r\n  };\r\n\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getShowContacts = createSelector(\r\n    [getContacts, getFilter], (contacts, filter) => {\r\n        const toLowerCase = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(toLowerCase));\r\n    }\r\n);","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../redux/contacts-operations';\r\nimport { getContacts } from 'redux/contacts-selectors';\r\nimport './FormAddContacts.css';\r\n\r\nexport default function FormAddContacts() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const formSubmitHandler = ( name, number ) => {\r\n        const alreadyAddedContact = contacts.find(contact => contact.name === name);\r\n        if (alreadyAddedContact) {\r\n            alert(`${alreadyAddedContact.name} is already in contacts`);\r\n            return;\r\n        }\r\n\r\n        dispatch(addContact( name, number ));\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        formSubmitHandler(name, number);\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n       setName('');\r\n       setNumber('');\r\n    };\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"input-form\">\r\n                <label>\r\n                    Name<input\r\n                    className=\"add-input\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                /> \r\n                </label>\r\n                <label>\r\n                    Number<input\r\n                    className=\"add-input\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className=\"btn-add\" type=\"submit\">Add contact</button>\r\n            </div>  \r\n            </form>\r\n        );\r\n};","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact, fetchContacts } from '../redux/contacts-operations';\r\nimport { getContacts, getShowContacts } from '../redux/contacts-selectors'\r\nimport './Contacts.css';\r\n\r\nconst Contacts = () => {\r\n    const contacts = useSelector(getContacts);\r\n    const showContacts = useSelector(getShowContacts);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n    const onDeleteContact = (contactId) => {\r\n        dispatch(deleteContact(contactId))\r\n    };\r\n\r\n    return contacts && (\r\n        <ul>\r\n            {showContacts.map(({ id, name, number }) => (\r\n                <li key={id} className=\"contacts__item\">\r\n                    <p className=\"contacts__text\">{name}: {number}</p>\r\n                    <button onClick={() => onDeleteContact(id)}>delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n    \r\n};\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../redux/contacts-actions';\r\nimport { getContacts, getFilter } from 'redux/contacts-selectors';\r\nimport './Filter.css';\r\n\r\nconst Filter = () => {\r\n    const contacts = useSelector(getContacts);\r\n    const filter = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    function getFilteredName (event) {\r\n        const { value } = event.currentTarget;\r\n        handleFilter(value);\r\n    }\r\n\r\n    const handleFilter = value => {\r\n        dispatch(changeFilter(value))\r\n    };\r\n\r\n    return contacts.length !== 0 ? (\r\n        <div>\r\n        <label>\r\n            Find contacts by Name<input\r\n            className=\"filter-input\"\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={getFilteredName}\r\n        />\r\n        </label>\r\n        \r\n        </div>\r\n        ) : (\r\n        <p>There is no contacts in your Phonebook</p>\r\n    )\r\n};\r\n\r\nexport default Filter;","import FormAddContacts from '../FormAddContacts/FormAddContacts';\r\nimport Contacts from '../Contacts/Contacts';\r\nimport Filter from '../Filter/Filter';\r\nimport './Phonebook.css';\r\n\r\nfunction Phonebook() {\r\n\r\n    return (\r\n        <div className=\"phonebook\">\r\n            <h1>Phonebook</h1>\r\n            <FormAddContacts />\r\n            <h2>Contacts</h2>\r\n            <Filter />\r\n            <Contacts />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Phonebook;","import Phonebook from './Phonebook/Phonebook'\n\nconst App = () => {\n  return (\n  \n      <Phonebook />\n    \n  );\n};\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsSuccess]: (_, action) => action.payload,\r\n    [addContactSuccess]: (state, action) => [...state, action.payload],\r\n    [deleteContactSuccess]: (state, action) =>\r\n      state.filter(({ id }) => id !== action.payload),\r\n  });\r\n  \r\n  const isLoading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n  \r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n  \r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n  });\r\n  \r\n  const error = createReducer(null, {\r\n    [fetchContactsError]: (_, action) => action.payload,\r\n    [fetchContactsRequest]: () => null,\r\n  \r\n    [addContactError]: (_, action) => action.payload,\r\n    [addContactRequest]: () => null,\r\n  \r\n    [deleteContactError]: (_, action) => action.payload,\r\n    [deleteContactRequest]: () => null,\r\n  });\r\n  \r\n  const filter = createReducer('', {\r\n    [changeFilter]: (_, action) => action.payload,\r\n  });\r\n  \r\n  export default combineReducers({\r\n    items,\r\n    isLoading,\r\n    error,\r\n    filter,\r\n  });","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}